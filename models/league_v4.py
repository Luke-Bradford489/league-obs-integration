# generated by datamodel-codegen:
#   filename:  riot_open_api.json
#   timestamp: 2024-10-17T17:34:07+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class MiniSeriesDTO(BaseModel):
    losses: int
    progress: str
    target: int
    wins: int


class LeagueEntryDTO(BaseModel):
    leagueId: Optional[str] = None
    summonerId: str = Field(..., description="Player's encrypted summonerId.")
    queueType: str
    tier: Optional[str] = None
    rank: Optional[str] = Field(
        None, description="The player's division within a tier."
    )
    leaguePoints: int
    wins: int = Field(..., description='Winning team on Summoners Rift.')
    losses: int = Field(..., description='Losing team on Summoners Rift.')
    hotStreak: bool
    veteran: bool
    freshBlood: bool
    inactive: bool
    miniSeries: Optional[MiniSeriesDTO] = None


class LeagueItemDTO(BaseModel):
    freshBlood: bool
    wins: int = Field(..., description='Winning team on Summoners Rift.')
    miniSeries: Optional[MiniSeriesDTO] = None
    inactive: bool
    veteran: bool
    hotStreak: bool
    rank: str
    leaguePoints: int
    losses: int = Field(..., description='Losing team on Summoners Rift.')
    summonerId: str = Field(..., description="Player's encrypted summonerId.")


class LeagueListDTO(BaseModel):
    leagueId: Optional[str] = None
    entries: List[LeagueItemDTO]
    tier: str
    name: Optional[str] = None
    queue: Optional[str] = None
