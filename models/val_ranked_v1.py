# generated by datamodel-codegen:
#   filename:  riot_open_api.json
#   timestamp: 2024-10-17T17:34:07+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class PlayerDto(BaseModel):
    puuid: Optional[str] = Field(
        None, description='This field may be omitted if the player has been anonymized.'
    )
    gameName: Optional[str] = Field(
        None, description='This field may be omitted if the player has been anonymized.'
    )
    tagLine: Optional[str] = Field(
        None, description='This field may be omitted if the player has been anonymized.'
    )
    leaderboardRank: int
    rankedRating: int
    numberOfWins: int
    competitiveTier: Optional[int] = None


class TierDetailDto(BaseModel):
    rankedRatingThreshold: int
    startingPage: int
    startingIndex: int


class LeaderboardDto(BaseModel):
    shard: str = Field(..., description='The shard for the given leaderboard.')
    actId: str = Field(
        ...,
        description='The act id for the given leaderboard. Act ids can be found using the val-content API.',
    )
    totalPlayers: int = Field(
        ..., description='The total number of players in the leaderboard.'
    )
    players: List[PlayerDto]
    immortalStartingPage: Optional[int] = None
    immortalStartingIndex: Optional[int] = None
    topTierRRThreshold: Optional[int] = None
    tierDetails: Optional[Dict[str, TierDetailDto]] = None
    startIndex: Optional[int] = None
    query: Optional[str] = None
